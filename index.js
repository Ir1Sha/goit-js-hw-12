import{a as L,S as v,i as m}from"./assets/vendor-CUAzmrUA.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const f of o.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&s(f)}).observe(document,{childList:!0,subtree:!0});function i(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=i(r);fetch(r.href,o)}})();const w="47416183-73bb296483032a9a16a802376",S="https://pixabay.com/api/";function p(t,e=1,i=15){return L.get(S,{params:{key:w,q:t,image_type:"photo",orientation:"horizontal",safesearch:!0,page:e,per_page:i}}).then(s=>s.data).catch(s=>{throw console.error("Error fetching images:",s),new Error("Failed to fetch images.")})}function g(t){return t.map(e=>`
        <div class="photo-card">
            <a href="${e.largeImageURL}" class="gallery-link" title="${e.tags.replace(/,/g," ")}">
                <img src="${e.webformatURL}" alt="${e.tags}" loading="lazy" class="gallery-image" />
            </a>
            <div class="info">
                <p>
                    <span class="info-item"><b>Likes:</b> ${e.likes}</span>
                    <span class="info-item"><b>Views:</b> ${e.views}</span>
                    <span class="info-item"><b>Comments:</b> ${e.comments}</span>
                    <span class="info-item"><b>Downloads:</b> ${e.downloads}</span>
                </p>
            </div>
        </div>
    `).join("")}const y=document.querySelector("#search-form"),q=y.querySelector('input[name="searchQuery"]'),u=document.querySelector(".gallery"),h=document.querySelector("#loader"),c=document.querySelector("#load-more"),b=new v(".gallery a",{captions:!0,captionsData:"title",captionType:"attr",captionSelector:"self",captionDelay:250});let l="",n=1;const d=15;function a(t){t?h.classList.remove("hidden"):h.classList.add("hidden")}y.addEventListener("submit",t=>{t.preventDefault(),l=q.value.trim(),n=1,u.innerHTML="",l&&(a(!0),p(l,n,d).then(e=>{if(a(!1),!e.hits||e.hits.length===0){m.error({message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"});return}const i=g(e.hits);u.insertAdjacentHTML("beforeend",i),b.refresh(),e.totalHits>n*d?c.classList.remove("hidden"):c.classList.add("hidden")}).catch(e=>{a(!1),console.error(e)}))});c.addEventListener("click",async()=>{a(!0);try{n+=1;const t=await p(l,n,d),e=g(t.hits);u.insertAdjacentHTML("beforeend",e),b.refresh(),console.log("Lightbox refreshed after loading more images."),E(),n*d>=t.totalHits&&(c.classList.add("hidden"),m.info({message:"We're sorry, but you've reached the end of search results.",position:"topRight"}))}catch(t){console.error("Error loading more images:",t)}finally{a(!1)}});function E(){const t=document.querySelector(".gallery");if(!t||!t.firstElementChild){console.warn("No elements in gallery to scroll to.");return}const{height:e}=t.firstElementChild.getBoundingClientRect();console.log("Scrolling by height:",e*2),window.scrollBy({top:e*2,behavior:"smooth"})}
//# sourceMappingURL=index.js.map
